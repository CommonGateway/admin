{"version":3,"file":"component---src-pages-sources-[id]-tsx-b9801e0e0833892dac2b.js","mappings":"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","sources":["webpack://pwa/./src/components/sources/sourceForm.js","webpack://pwa/./src/pages/sources/[id].tsx","webpack://pwa/./src/components/utility/elementCreation.js"],"sourcesContent":["import * as React from \"react\";\nimport {Link, navigate} from \"gatsby\";\nimport {\n  removeEmptyObjectValues,\n  retrieveFormArrayAsObject,\n} from \"../utility/inputHandler\";\nimport Spinner from \"../common/spinner\";\nimport {GenericInputComponent} from \"@conductionnl/nl-design-system/lib/GenericInput/src/genericInput\";\nimport {SelectInputComponent} from \"@conductionnl/nl-design-system/lib/SelectInput/src/selectInput\";\nimport {Accordion} from \"@conductionnl/nl-design-system/lib/Accordion/src/accordion\";\nimport {MultiDimensionalArrayInput} from \"@conductionnl/nl-design-system/lib/MultiDimenionalArrayInput/src/multiDimensionalArrayInput\";\nimport {Card} from \"@conductionnl/nl-design-system/lib/Card/src/card\";\nimport {addElement, deleteElementFunction} from \"../utility/elementCreation\";\n\nexport default function SourceForm({ id }) {\n  const [context, setContext] = React.useState(null);\n  const [source, setSource] = React.useState(null);\n  const [showSpinner, setShowSpinner] = React.useState(false);\n\n  React.useEffect(() => {\n    if (typeof window !== \"undefined\" && context === null) {\n      setContext({\n        adminUrl: window.GATSBY_ADMIN_URL,\n      });\n    }\n  }, [context]);\n\n  const getSource = () => {\n    fetch(`${context.adminUrl}/gateways${id}`, {\n      credentials: \"include\",\n      headers: {\"Content-Type\": \"application/json\", 'Authorization': 'Bearer ' + sessionStorage.getItem('jwt')},\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setSource(data);\n        console.log(data);\n      });\n  };\n\n  const saveSource = (event) => {\n    setShowSpinner(true);\n    event.preventDefault();\n    let headers = retrieveFormArrayAsObject(event.target, \"headers\");\n\n    let url = context.adminUrl + \"/gateways\";\n    let method = \"POST\";\n    if (id !== \"new\") {\n      url = url + \"/\" + id;\n      method = \"PUT\";\n    }\n\n    let nameInput = document.getElementById(\"nameInput\");\n    let locationInput = document.getElementById(\"locationInput\");\n    let authInput = document.getElementById(\"authInput\");\n    let localeInput = document.getElementById(\"localeInput\");\n    let acceptInput = document.getElementById(\"acceptInput\");\n    let jwtInput = document.getElementById(\"jwtInput\");\n    let jwtIdInput = document.getElementById(\"jwtIdInput\");\n    let secretInput = document.getElementById(\"secretInput\");\n    let usernameInput = document.getElementById(\"usernameInput\");\n    let passwordInput = document.getElementById(\"passwordInput\");\n    let apikeyInput = document.getElementById(\"apikeyInput\");\n    let documentationInput = document.getElementById(\"documentationInput\");\n    let authorizationHeaderInput = document.getElementById(\n      \"authorizationHeaderInput\"\n    );\n    // let authorizationHeaderInput = document.getElementById('authorizationHeaderInput');\n\n    let body = {\n      name: nameInput.value,\n      location: locationInput.value,\n      auth: authInput.value,\n      locale: localeInput.value,\n      accept: acceptInput.value,\n      jwt: jwtInput.value,\n      jwtId: jwtIdInput.value,\n      secret: secretInput.value,\n      username: usernameInput.value,\n      password: passwordInput.value,\n      apikey: apikeyInput.value,\n      documentation: documentationInput.value,\n      authorizationHeader: authorizationHeaderInput.value,\n    };\n\n    if (Object.keys(headers).length !== 0) {\n      body[\"headers\"] = headers;\n    } else {\n      body[\"headers\"] = [];\n    }\n\n    body = removeEmptyObjectValues(body);\n\n    fetch(url, {\n      method: method,\n      credentials: \"include\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setSource(data);\n        setShowSpinner(false);\n        navigate(\"/sources\");\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  React.useEffect(() => {\n    if (id !== \"new\") {\n      getSource();\n    }\n  }, []);\n\n  return (\n    <form id=\"dataForm\" onSubmit={saveSource}>\n      <Card title={\"Source\"}\n            cardHeader={function (){return(<>\n                <Link className=\"utrecht-link\" to={\"/sources\"}>\n                  <button className=\"utrecht-button utrecht-button-sm btn-sm btn-danger mr-2\">\n                    <i className=\"fas fa-long-arrow-alt-left mr-2\"/>Back\n                  </button>\n                </Link>\n                <button\n                  className=\"utrecht-button utrec`ht-button-sm btn-sm btn-success\"\n                  type=\"submit\"\n                >\n                  <i className=\"fas fa-save mr-2\"/>Save\n                </button>\n              </>\n            )}}\n            cardBody={function () {\n              return (\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    {showSpinner === true ? (\n                      <Spinner />\n                    ) : (\n                      <>\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            {source !== null && source.name !== null ? (\n                              <GenericInputComponent type={\"text\"} name={\"name\"} id={\"nameInput\"} data={source.name} nameOverride={\"Name\"} required={\"true\"}/>\n                            ) : (\n                              <GenericInputComponent type={\"text\"} name={\"name\"} id={\"nameInput\"}  nameOverride={\"Name\"} required={\"true\"}/>\n                            )}\n                          </div>\n                          <div className=\"col-6\">\n                            {source !== null && source.location !== null ? (\n                              <GenericInputComponent nameOverride={\"Location (url)\"} name={\"location\"} data={source.location} type={\"text\"} required={\"true\"} id={\"locationInput\"}/>\n                            ) : (\n                              <GenericInputComponent nameOverride={\"Location (url)\"}  name={\"location\"}  type={\"text\"} required={\"true\"} id={\"locationInput\"}/>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            {source !== null && source.accept !== null ? (\n                              <GenericInputComponent nameOverride={\"Accept (accept header used for this source)\"} name={\"accept\"} data={source.accept} type={\"text\"} id={\"acceptInput\"}/>\n                            ) : (\n                              <GenericInputComponent nameOverride={\"Accept (accept header used for this source)\"} name={\"accept\"}  type={\"text\"} id={\"acceptInput\"}/>\n                            )}\n                          </div>\n                          <div className=\"col-6\">\n                            {source !== null && source.locale !== null ? (\n                              <GenericInputComponent nameOverride={\"Locale\"} name={\"locale\"} data={source.locale} type={\"text\"} id={\"localeInput\"}/>\n                            ) : (\n                              <GenericInputComponent nameOverride={\"Locale\"} name={\"locale\"}  type={\"text\"} id={\"localeInput\"} maxLength={\"10\"}/>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"form-group\">\n                          {source !== null && source.auth !== null ? (\n                              <SelectInputComponent\n                                options={[{name: \"apikey\"}, {name: \"jwt\"}, {name: \"username-password\"}]}\n                                name={\"auth\"} id={\"authInput\"} nameOverride={\"Auth *\"} data={source.auth}/>\n                            ) :\n                            (\n                              <SelectInputComponent\n                                options={[{name: \"apikey\"}, {name: \"jwt\"}, {name: \"username-password\"}]}\n                                name={\"auth\"} id={\"authInput\"} nameOverride={\"Auth *\"}/>\n                            )}\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-4\">\n                            <div className=\"form-group\">\n                              {source !== null && source.jwt !== null ? (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Jwt\"} name={\"jwt\"} data={source.jwt} type={\"text\"} id={\"jwtInput\"}/>\n                              ) : (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Jwt\"} name={\"jwt\"} type={\"text\"} id={\"jwtInput\"}/>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"col-4\">\n                            <div className=\"form-group\">\n                              {source !== null && source.jwtId !== null ? (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"JwtId\"} name={\"jwtId\"} data={source.jwtId} type={\"text\"} id={\"jwtIdInput\"}/>\n                              ) : (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"JwtId\"} name={\"jwtId\"} type={\"text\"} id={\"jwtIdInput\"}/>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"col-4\">\n                            <div className=\"form-group\">\n                              {source !== null && source.secret !== null ? (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Secret\"} name={\"secret\"} data={source.secret} type={\"text\"} id={\"secretInput\"}/>\n                              ) : (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Secret\"} name={\"secret\"} type={\"text\"} id={\"secretInput\"}/>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <div className=\"form-group\">\n                              {source !== null && source.username !== null ? (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Username\"} name={\"username\"} data={source.username} type={\"text\"} id={\"usernameInput\"}/>\n                              ) : (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Username\"} name={\"username\"} type={\"text\"} id={\"usernameInput\"}/>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"col-6\">\n                            <div className=\"form-group\">\n                              {source !== null && source.password !== null ? (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Password\"} name={\"password\"} data={source.password} type={\"text\"}  id={\"passwordInput\"}/>\n                              ) : (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Password\"} name={\"password\"} type={\"text\"} id={\"passwordInput\"}/>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <div className=\"form-group\">\n                              {source !== null && source.apikey !== null ? (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Apikey\"} name={\"apikey\"} data={source.apikey} type={\"text\"} id={\"apikeyInput\"}/>\n                              ) : (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Apikey\"} name={\"apikey\"} type={\"text\"} id={\"apikeyInput\"}/>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"col-6\">\n                            <div className=\"form-group\">\n                              {source !== null && source.documentation !== null ? (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Documentation\"} name={\"documentation\"} data={source.documentation} type={\"text\"}  id={\"documentationInput\"}/>\n                              ) : (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"Documentation\"} name={\"documentation\"} type={\"text\"} id={\"documentationInput\"}/>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"col-6\">\n                            <div className=\"form-group\">\n                              {source !== null && source.authorizationHeader !== null ? (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"AuthorizationHeader\"} name={\"authorizationHeader\"} data={source.authorizationHeader} type={\"text\"} id={\"authorizationHeaderInput\"}/>\n                              ) : (\n                                <GenericInputComponent className=\"utrecht-textbox utrecht-textbox--html-input\" nameOverride={\"AuthorizationHeader\"} name={\"authorizationHeader\"} type={\"text\"} id={\"authorizationHeaderInput\"}/>\n                              )}\n                            </div>\n                          </div>\n                          <Accordion id=\"sourceAccordion\"\n                                     items={[{\n                                       title: \"Headers\",\n                                       id: \"headers\",\n                                       render: function () {\n                                         return (<>\n                                           {source !== null ? (\n                                             <MultiDimensionalArrayInput\n                                               id={\"headers\"}\n                                               label={\"Headers\"}\n                                               data={[{key: 'headers', value: source.headers}]}\n                                               deleteFunction={deleteElementFunction}\n                                               addFunction={addElement}/>\n                                           ) : (\n                                             <MultiDimensionalArrayInput\n                                               id={\"headers\"}\n                                               label={\"Headers\"}\n                                               data={null}\n                                               deleteFunction={deleteElementFunction}\n                                               addFunction={addElement}\n                                             />\n                                           )}\n                                         </>)\n                                       }\n                                     }]}\n                                     />\n                        </div>\n                      </>\n                    )}\n                  </div>\n                </div>\n              )\n            }}\n      />\n    </form>\n  );\n}\n","import * as React from \"react\";\nimport Layout from \"../../components/common/layout\";\nimport SourceForm from \"../../components/sources/sourceForm\";\n\nconst IndexPage = (props) => {\n  return (\n    <Layout>\n      <main>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"page-top-item\">\n              <SourceForm id={props.params.id} />\n            </div>\n          </div>\n        </div>\n      </main>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","export const createElement = (\n  tagName,\n  className = [],\n  attributes = {},\n  value = \"\",\n  innerText = \"\",\n  onclick = null\n) => {\n  // create element\n  let element = document.createElement(tagName);\n\n  // set element value\n  element.value = value;\n\n  // set element inner text\n  element.innerText = innerText;\n\n  // add attributes to element\n  for (const [key, value] of Object.entries(attributes)) {\n    element.setAttribute(key, value);\n  }\n\n  // add classes to attribute\n  for (let i = 0; i < className.length; i++) {\n    element.classList.add(className[i]);\n  }\n\n  if (onclick !== null) {\n    element.addEventListener(\"click\", onclick, false);\n  }\n\n  return element;\n};\n\nexport const addElement = (\n  container,\n  newKey,\n  newValue,\n  inputName,\n  onClickFunction = null,\n  label = true\n) => {\n  let key = document.getElementById(newKey);\n  let value = document.getElementById(newValue);\n  let form = document.getElementById(container);\n\n  if (key.value.length == 0 || value.value.length == 0) {\n    return;\n  }\n\n  //create row\n  let formGroupRow = createElement(\"div\", [\n    \"row\",\n    key.value.replaceAll(\" \", \"-\"),\n  ]);\n\n  //set classNames for elements\n\n  // create input value\n  let formGroupColValue = createElement(\"div\", [\"col-5\"]);\n  let formGroupValue = createElement(\"div\", [\"from-group\"]);\n  let inputLabel = null;\n  if (label) {\n    inputLabel = createElement(\n      \"label\",\n      [\"utrecht-form-label\"],\n      { for: value.value },\n      \"\",\n      key.value\n    );\n  }\n  let inputValue = createElement(\n    \"input\",\n    [\"utrecht-textbox\", \"utrecht-textbox--html-input\", \"mb-2\"],\n    {\n      type: \"text\",\n      id: value.value,\n      name: `${inputName}[${key.value.replaceAll(\" \", \"-\")}]`,\n    },\n    value.value\n  );\n\n  //create delete button\n  let formGroupButton = createElement(\"div\", [\n    \"col-2\",\n    \"d-flex\",\n    \"mt-auto\",\n    \"mb-3\",\n  ]);\n  let deleteButton = createElement(\n    \"button\",\n    [\"utrecht-button\", \"utrecht-button-sm\", \"btn-sm\", \"btn-danger\"],\n    { type: \"button\" },\n    key.value,\n    \"Delete\",\n    onClickFunction\n  );\n\n  // adds the inputs in the div form-group\n  if (inputLabel !== null) {\n    formGroupValue.appendChild(inputLabel);\n  }\n  formGroupValue.appendChild(inputValue);\n  // adds the elements in in the col\n  formGroupColValue.appendChild(formGroupValue);\n  formGroupButton.appendChild(deleteButton);\n  // adds the elements in the row\n  formGroupRow.appendChild(formGroupColValue);\n  formGroupRow.appendChild(formGroupButton);\n  // adds the row to the newInputs div\n  form.appendChild(formGroupRow);\n\n  key.value = \"\";\n  value.value = \"\";\n};\n\nexport const deleteElementFunction = (event) => {\n  let elements = document.getElementsByClassName(event.target.value);\n\n  for (let i = 0; i < elements.length; i++) {\n    elements[i].remove();\n  }\n};\n\nexport const closeModal = (id) => {\n  let element = document.createElement(\"button\");\n  let modal = document.getElementById(\"modalFooter\" + id);\n\n  element.setAttribute(\"data-bs-dismiss\", \"modal\");\n  element.style.display = \"none\";\n\n  modal.appendChild(element);\n\n  element.click();\n\n  modal.removeChild(element);\n};\n"],"names":["SourceForm","id","React","context","setContext","source","setSource","showSpinner","setShowSpinner","window","adminUrl","GATSBY_ADMIN_URL","fetch","credentials","headers","sessionStorage","getItem","then","response","json","data","console","log","onSubmit","event","preventDefault","retrieveFormArrayAsObject","target","url","method","nameInput","document","getElementById","locationInput","authInput","localeInput","acceptInput","jwtInput","jwtIdInput","secretInput","usernameInput","passwordInput","apikeyInput","documentationInput","authorizationHeaderInput","body","name","value","location","auth","locale","accept","jwt","jwtId","secret","username","password","apikey","documentation","authorizationHeader","Object","keys","length","removeEmptyObjectValues","JSON","stringify","navigate","catch","error","Card","title","cardHeader","className","to","type","cardBody","GenericInputComponent","nameOverride","required","maxLength","SelectInputComponent","options","Accordion","items","render","MultiDimensionalArrayInput","label","key","deleteFunction","deleteElementFunction","addFunction","addElement","props","params","createElement","tagName","attributes","innerText","onclick","element","entries","setAttribute","i","classList","add","addEventListener","container","newKey","newValue","inputName","onClickFunction","form","formGroupRow","replaceAll","formGroupColValue","formGroupValue","inputLabel","for","inputValue","formGroupButton","deleteButton","appendChild","elements","getElementsByClassName","remove"],"sourceRoot":""}