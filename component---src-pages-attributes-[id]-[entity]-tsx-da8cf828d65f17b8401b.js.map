{"version":3,"file":"component---src-pages-attributes-[id]-[entity]-tsx-da8cf828d65f17b8401b.js","mappings":"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","sources":["webpack://pwa/./node_modules/@conductionnl/nl-design-system/lib/Checkbox/src/checkbox.js","webpack://pwa/./src/components/attributes/attribuutForm.tsx","webpack://pwa/./src/pages/attributes/[id]/[entity].tsx","webpack://pwa/./src/components/utility/elementCreation.js"],"sourcesContent":["\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Checkbox = void 0;\n\nvar jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nvar _ = require(\"lodash\");\n\nvar Checkbox = function Checkbox(props) {\n  return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {\n    children: (0, jsx_runtime_1.jsxs)(\"div\", __assign({\n      className: \"form-check\"\n    }, {\n      children: [(0, jsx_runtime_1.jsx)(\"input\", {\n        className: \"form-check-input utrecht-checkbox utrecht-checkbox--html-input\",\n        type: props.type,\n        id: props.id,\n        name: props.nameAttribute,\n        defaultChecked: props.data !== null,\n        defaultValue: props.defaultValue === \"false\" ? \"false\" : \"true\",\n        required: props.required !== false\n      }, void 0), (0, jsx_runtime_1.jsx)(\"label\", __assign({\n        className: \"form-check-label\",\n        htmlFor: props.id\n      }, {\n        children: _.upperFirst(props.nameLabel)\n      }), void 0)]\n    }), void 0)\n  }, void 0);\n};\n\nexports.Checkbox = Checkbox;","import * as React from \"react\";\nimport {useUrlContext} from \"../../context/urlContext\";\nimport {Link, navigate} from \"gatsby\";\nimport {\n  checkValues,\n  removeEmptyObjectValues,\n  retrieveFormArrayAsOArray,\n  retrieveFormArrayAsObject,\n} from \"../utility/inputHandler\";\nimport {GenericInputComponent} from \"@conductionnl/nl-design-system/lib/GenericInput/src/genericInput\";\nimport {Checkbox} from \"@conductionnl/nl-design-system/lib/Checkbox/src/checkbox\";\nimport {SelectInputComponent} from \"@conductionnl/nl-design-system/lib/SelectInput/src/selectInput\";\nimport {Accordion} from \"@conductionnl/nl-design-system/lib/Accordion/src/accordion\";\nimport {MultiDimensionalArrayInput} from \"@conductionnl/nl-design-system/lib/MultiDimenionalArrayInput/src/multiDimensionalArrayInput\";\nimport Spinner from \"../common/spinner\";\nimport {Card} from \"@conductionnl/nl-design-system/lib/Card/src/card\";\nimport {addElement, deleteElementFunction} from \"../utility/elementCreation\";\n\nexport default function AttributeForm({id, entity}) {\n  const context = useUrlContext();\n  const [attribute, setAttribute] = React.useState(null);\n  const [showSpinner, setShowSpinner] = React.useState(false);\n  const [attributes, setAttributes] = React.useState(null);\n\n  const getAttributes = () => {\n    fetch(`${context.adminUrl}/attributes`, {\n      credentials: \"include\",\n      headers: {\"Content-Type\": \"application/json\", 'Authorization': 'Bearer ' + sessionStorage.getItem('jwt')},\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setAttributes(data[\"hydra:member\"]);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const getAttribute = () => {\n    fetch(`${context.adminUrl}/attributes/${id}`, {\n      credentials: \"include\",\n      headers: {\"Content-Type\": \"application/json\", 'Authorization': 'Bearer ' + sessionStorage.getItem('jwt')},\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setAttribute(data);\n      });\n  };\n\n  const saveAttribute = (event) => {\n    event.preventDefault();\n\n    let attributeEnum = retrieveFormArrayAsOArray(event.target, \"enum\");\n    let allOf = retrieveFormArrayAsObject(event.target, \"allOf\");\n    let anyOf = retrieveFormArrayAsObject(event.target, \"anyOf\");\n    let oneOf = retrieveFormArrayAsObject(event.target, \"oneOf\");\n    let forbiddenIf = retrieveFormArrayAsObject(event.target, \"forbiddenIf\");\n    let requiredIf = retrieveFormArrayAsObject(event.target, \"requiredIf\");\n    let objectConfig = retrieveFormArrayAsObject(event.target, \"objectConfig\");\n\n    // get the inputs and check if set other set null\n    let body = {\n      entity: `/admin/entities/${entity}`,\n      name: event.target.name.value,\n      description: event.target.description.value\n        ? event.target.description.value\n        : null,\n      type: event.target.type.value,\n      format: event.target.format.value ? event.target.format.value : null,\n      persistToGateway: event.target.persistToGateway.checked,\n      cascade: event.target.cascade.checked,\n      searchable: event.target.searchable.checked,\n      required: event.target.required.checked,\n      mustBeUnique: event.target.mustBeUnique.checked,\n      multiple: event.target.multiple.checked,\n      nullable: event.target.nullable.checked,\n      writeOnly: event.target.writeOnly.checked,\n      readOnly: event.target.readOnly.checked,\n      deprecated: event.target.deprecated.checked,\n      defaultValue: event.target.defaultValue.value\n        ? event.target.defaultValue.value\n        : null,\n      fileType: event.target.fileType.value\n        ? event.target.fileType.value\n        : null,\n      example: event.target.example.value ? event.target.example.value : null,\n      maxFileSize: event.target.maxFileSize.value\n        ? parseInt(event.target.maxFileSize.value)\n        : null,\n      inversedBy: event.target.inversedBy.value\n        ? event.target.inversedBy.value\n        : null,\n      multipleOf: event.target.multipleOf.value\n        ? parseInt(event.target.multipleOf.value)\n        : null,\n      maximum: event.target.maximum.value\n        ? parseInt(event.target.maximum.value)\n        : null,\n      minimum: event.target.minimum.value\n        ? parseInt(event.target.minimum.value)\n        : null,\n      exclusiveMaximum: event.target.exclusiveMaximum.checked,\n      exclusiveMinimum: event.target.exclusiveMinimum.checked,\n      maxLength: event.target.maxLength.value\n        ? parseInt(event.target.maxLength.value)\n        : null,\n      minLength: event.target.minLength.value\n        ? parseInt(event.target.minLength.value)\n        : null,\n      maxItems: event.target.maxItems.value\n        ? parseInt(event.target.maxItems.value)\n        : null,\n      minItems: event.target.minItems.value\n        ? parseInt(event.target.minItems.value)\n        : null,\n      maxDate: event.target.maxDate.value ? event.target.maxDate.value : null,\n      minDate: event.target.minDate.value ? event.target.minDate.value : null,\n      uniqueItems: event.target.uniqueItems.checked,\n      minProperties: event.target.minProperties.value\n        ? parseInt(event.target.minProperties.value)\n        : null,\n      maxProperties: event.target.maxProperties.value\n        ? parseInt(event.target.maxProperties.value)\n        : null,\n    };\n\n    if (attributeEnum.length != 0) {\n      body[\"enum\"] = attributeEnum;\n    } else {\n      body[\"enum\"] = [];\n    }\n\n    if (Object.keys(allOf).length != 0) {\n      body[\"allOf\"] = allOf;\n    } else {\n      body[\"allOf\"] = [];\n    }\n\n    if (Object.keys(anyOf).length != 0) {\n      body[\"anyOf\"] = anyOf;\n    } else {\n      body[\"anyOf\"] = [];\n    }\n\n    if (Object.keys(oneOf).length != 0) {\n      body[\"oneOf\"] = oneOf;\n    } else {\n      body[\"oneOf\"] = [];\n    }\n\n    if (Object.keys(forbiddenIf).length != 0) {\n      body[\"forbiddenIf\"] = forbiddenIf;\n    } else {\n      body[\"forbiddenIf\"] = [];\n    }\n\n    if (Object.keys(requiredIf).length != 0) {\n      body[\"requiredIf\"] = requiredIf;\n    } else {\n      body[\"requiredIf\"] = [];\n    }\n\n    if (Object.keys(objectConfig).length != 0) {\n      body[\"objectConfig\"] = objectConfig;\n    } else {\n      body[\"objectConfig\"] = [];\n    }\n\n    // This removes empty values from the body\n    body = removeEmptyObjectValues(body);\n\n    if (!checkValues([body.name, body.type])) {\n      return;\n    }\n\n    // setShowSpinner(true);\n\n    let url = context.adminUrl + \"/attributes\";\n    let method = null;\n    if (id === \"new\") {\n      method = \"POST\";\n    } else {\n      url = `${url}/${id}`;\n      method = \"PUT\";\n    }\n\n    fetch(url, {\n      method: method,\n      credentials: \"include\",\n      headers: {\"Content-Type\": \"application/json\", 'Authorization': 'Bearer ' + sessionStorage.getItem('jwt')},\n      body: JSON.stringify(body),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"yes!\");\n        setShowSpinner(false);\n        navigate(`/entities/${entity}`);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  React.useEffect(() => {\n    getAttributes();\n    if (id !== \"new\") {\n      getAttribute();\n    }\n  }, []);\n\n  const options = [\n    {\n      name: \"String\",\n      value: \"string\",\n    },\n    {\n      name: \"Array\",\n      value: \"array\",\n    },\n    {\n      name: \"Integer\",\n      value: \"integer\",\n    },\n    {\n      name: \"Integer\",\n      value: \"integer\",\n    },\n    {\n      name: \"Integer\",\n      value: \"integer\",\n    },\n    {\n      name: \"Integer\",\n      value: \"integer\",\n    },\n  ];\n\n  return (\n    <Card title=\"Values\" back=\"/applications\" save={true}\n          cardHeader={function (){return(<>\n            <Link className=\"utrecht-link\" to={`/entities/${entity}`}>\n              <button className=\"utrecht-button utrecht-button-sm btn-sm btn-danger mr-2\">\n                <i className=\"fas fa-long-arrow-alt-left mr-2\"/>Back\n              </button>\n            </Link>\n            <button\n              className=\"utrecht-button utrec`ht-button-sm btn-sm btn-success\"\n              type=\"submit\"\n            >\n              <i className=\"fas fa-save mr-2\"/>Save\n            </button>\n          </>)}}\n          cardBody={function (){return(\n            <div className=\"row\">\n              <div className=\"col-12\">\n                {showSpinner === true ? (\n                  <Spinner />\n                ) : (\n                  <>\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.name !== null ? (\n                          <GenericInputComponent type={\"text\"} name={\"name\"} id={\"nameInput\"} data={attribute.name}\n                                                 nameOverride={\"Name\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"text\"} name={\"name\"} id={\"nameInput\"} nameOverride={\"Name\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.description !== null ? (\n                          <GenericInputComponent type={\"text\"} name={\"description\"} id={\"descriptionInput\"}\n                                                 data={attribute.description} nameOverride={\"Description\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"text\"} name={\"description\"} id={\"descriptionInput\"}\n                                                 nameOverride={\"Description\"}/>\n                        )}\n                      </div>\n                    </div>\n                    <br/>\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.type !== null ? (\n                            <SelectInputComponent\n                              options={[{name: \"String\", value: 'string'}, {\n                                name: \"Array\",\n                                value: \"array\"\n                              }, {name: \"Integer\", value: \"integer\"}, {name: \"Boolean\", value: \"boolean\"},\n                                {name: \"Object\", value: \"object\"}, {name: \"Date\", value: \"date\"}, {\n                                  name: \"Datetime\",\n                                  value: \"datetime\"\n                                }, {name: \"Number\", value: \"number\"}, {name: \"Float\", value: \"float\"}, {\n                                  name: \"File\",\n                                  value: \"file\"\n                                }]}\n                              name={\"type\"} id={\"typeInput\"} nameOverride={\"Type\"} data={attribute.type}/>\n                          ) :\n                          (\n                            <SelectInputComponent\n                              options={[{name: \"String\", value: 'string'}, {\n                                name: \"Array\",\n                                value: \"array\"\n                              }, {name: \"Integer\", value: \"integer\"}, {name: \"Boolean\", value: \"boolean\"},\n                                {name: \"Object\", value: \"object\"}, {name: \"Date\", value: \"date\"}, {\n                                  name: \"Datetime\",\n                                  value: \"datetime\"\n                                }, {name: \"Number\", value: \"number\"}, {name: \"Float\", value: \"float\"}, {\n                                  name: \"File\",\n                                  value: \"file\"\n                                }]}\n                              name={\"type\"} id={\"typeInput\"} nameOverride={\"Type\"}/>\n                          )}\n                      </div>\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.format !== null ? (\n                            <SelectInputComponent\n                              options={[{name: \"Email\", value: 'email'}, {\n                                name: \"Phone\",\n                                value: 'phone'\n                              }, {name: \"Country code\", value: 'country code'}, {name: \"BSN\", value: 'bsn'},\n                                {name: \"Url\", value: 'url'}, {name: \"UUID\", value: 'uuid'}, {name: \"Json\", value: 'json'}]}\n                              name={\"format\"} id={\"formatInput\"} nameOverride={\"Format\"} data={attribute.format}/>\n                          ) :\n                          (\n                            <SelectInputComponent\n                              options={[{name: \"Email\", value: 'email'}, {\n                                name: \"Phone\",\n                                value: 'phone'\n                              }, {name: \"Country code\", value: 'country code'}, {name: \"BSN\", value: 'bsn'},\n                                {name: \"Url\", value: 'url'}, {name: \"UUID\", value: 'uuid'}, {\n                                  name: \"Json\",\n                                  value: 'json'\n                                }]}\n                              name={\"format\"} id={\"formatInput\"} nameOverride={\"Format\"}/>\n                          )}\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.defaultValue !== null ? (\n                          <GenericInputComponent type={\"text\"} name={\"defaultValue\"} id={\"defaultValueInput\"}\n                                                 data={attribute.defaultValue} nameOverride={\"Default Value\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"text\"} name={\"defaultValue\"} id={\"defaultValueInput\"}\n                                                 nameOverride={\"Default Value\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.multipleOf !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"multipleOf\"} id={\"multipleOfInput\"}\n                                                 data={attribute.multipleOf} nameOverride={\"Multiple Of\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"multipleOf\"} id={\"multipleOfInput\"}\n                                                 nameOverride={\"Multiple Of\"}/>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.maximum !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"maximum\"} id={\"maximumInput\"}\n                                                 data={attribute.maximum} nameOverride={\"Maximum\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"maximum\"} id={\"maximumInput\"}\n                                                 nameOverride={\"Maximum\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        <label htmlFor=\"minimumInput\">Minimum</label>\n                        {attribute !== null && attribute.minimum !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"minimum\"} id={\"minimumInput\"}\n                                                 data={attribute.minimum} nameOverride={\"Minimum\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"minimum\"} id={\"minimumInput\"}\n                                                 nameOverride={\"Minimum\"}/>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.exclusiveMaximum ? (\n                                <Checkbox type={\"checkbox\"} id={\"exclusiveMaximumInput\"}\n                                          nameLabel={\"Exclusive Maximum\"} nameAttribute={\"exclusiveMaximum\"}\n                                          data={attribute.exclusiveMaximum}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"exclusiveMaximumInput\"}\n                                          nameLabel={\"Exclusive Maximum\"} nameAttribute={\"exclusiveMaximum\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"exclusiveMaximumInput\"}\n                                      nameLabel={\"Exclusive Maximum\"} nameAttribute={\"exclusiveMaximum\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.exclusiveMinimum ? (\n                                <Checkbox type={\"checkbox\"} id={\"exclusiveMinimumInout\"}\n                                          nameLabel={\"Exclusive minimum\"} nameAttribute={\"exclusiveMinimum\"}\n                                          data={attribute.exclusiveMinimum}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"exclusiveMinimumInout\"}\n                                          nameLabel={\"Exclusive minimum\"} nameAttribute={\"exclusiveMinimum\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"exclusiveMinimumInout\"}\n                                      nameLabel={\"Exclusive minimum\"} nameAttribute={\"exclusiveMinimum\"}/>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.minLength !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"minLength\"} id={\"minLengthInput\"}\n                                                 data={attribute.minLength} nameOverride={\"MinLength\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"minLength\"} id={\"minLengthInput\"}\n                                                 nameOverride={\"MinLength\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.maxLength !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"maxLength\"} id={\"maxLengthInput\"}\n                                                 data={attribute.maxLength} nameOverride={\"MaxLength\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"maxLength\"} id={\"maxLengthInput\"}\n                                                 nameOverride={\"MaxLength\"}/>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.maxItems !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"maxItems\"} id={\"maxItemsInput\"}\n                                                 data={attribute.maxItems} nameOverride={\"MaxItems\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"maxItems\"} id={\"maxItemsInput\"}\n                                                 nameOverride={\"MaxItems\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.minItems !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"minItems\"} id={\"minItemsInput\"}\n                                                 data={attribute.minItems} nameOverride={\"MinItems\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"minItems\"} id={\"minItemsInput\"}\n                                                 nameOverride={\"MinItems\"}/>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.maxDate !== null ? (\n                          <GenericInputComponent type={\"text\"} name={\"maxDate\"} id={\"maxDateInput\"}\n                                                 data={attribute.maxDate} nameOverride={\"MaxDate\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"text\"} name={\"maxDate\"} id={\"maxDateInput\"}\n                                                 nameOverride={\"MaxDate\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        {attribute !== null && attribute.minDate !== null ? (\n                          <GenericInputComponent type={\"text\"} name={\"minDate\"} id={\"minDateInput\"}\n                                                 data={attribute.minDate} nameOverride={\"MinDate\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"text\"} name={\"minDate\"} id={\"minDateInput\"}\n                                                 nameOverride={\"MinDate\"}/>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-6\">\n                        {attribute !== null &&\n                        attribute.minProperties !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"minProperties\"} id={\"minPropertiesInput\"}\n                                                 data={attribute.minProperties} nameOverride={\"Min Properties\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"minProperties\"} id={\"minPropertiesInput\"}\n                                                 nameOverride={\"Min Properties\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        {attribute !== null &&\n                        attribute.maxProperties !== null ? (\n                          <GenericInputComponent type={\"number\"} name={\"maxProperties\"} id={\"maxPropertiesInput\"}\n                                                 data={attribute.maxProperties} nameOverride={\"Max Properties\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"number\"} name={\"maxProperties\"} id={\"maxPropertiesInput\"}\n                                                 nameOverride={\"Max Properties\"}/>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-6\">\n                        <label htmlFor=\"maxPropertiesInput\">Example</label>\n                        {attribute !== null && attribute.example !== null ? (\n                          <GenericInputComponent type={\"text\"} name={\"example\"} id={\"exampleInput\"}\n                                                 data={attribute.example} nameOverride={\"Example\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"text\"} name={\"example\"} id={\"exampleInput\"}\n                                                 nameOverride={\"Example\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        <label htmlFor=\"maxPropertiesInput\">File Type</label>\n                        {attribute !== null && attribute.fileType !== null ? (\n                          <GenericInputComponent type={\"text\"} name={\"fileType\"} id={\"fileTypeInput\"}\n                                                 data={attribute.fileType} nameOverride={\"File Type\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"text\"} name={\"fileType\"} id={\"fileTypeInput\"}\n                                                 nameOverride={\"File Type\"}/>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-6\">\n                        <label htmlFor=\"maxPropertiesInput\">Max File Size</label>\n                        {attribute !== null && attribute.maxFileSize !== null ? (\n                          <GenericInputComponent type={\"text\"} name={\"maxFileSize\"} id={\"maxFileSizeInput\"}\n                                                 data={attribute.maxFileSize} nameOverride={\"Max File Size\"}/>\n                        ) : (\n                          <GenericInputComponent type={\"text\"} name={\"maxFileSize\"} id={\"maxFileSizeInput\"}\n                                                 nameOverride={\"Max File Size\"}/>\n                        )}\n                      </div>\n                      <div className=\"col-6\">\n                        <div className=\"form-group\">\n                          <label htmlFor=\"inversedByInput\">Inversed By</label>\n                          <select\n                            name=\"inversedBy\"\n                            id=\"inversedByInput\"\n                            className=\"utrecht-select utrecht-select--html-select\"\n                          >\n                            <option value=\"\"/>\n                            {attributes !== null &&\n                            attributes.length > 0 &&\n                            attributes.map((row) => (\n                              <>\n                                {attribute !== null &&\n                                attribute.inversedBy !== undefined &&\n                                attribute.inversedBy !== null &&\n                                attribute.inversedBy.id == row.id ? (\n                                  <option\n                                    value={\"/admin/attributes/\" + row.id}\n                                    selected\n                                  >\n                                    {row.name}\n                                  </option>\n                                ) : (\n                                  <option value={\"/admin/attributes/\" + row.id}>\n                                    {row.name}\n                                  </option>\n                                )}\n                              </>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                      <div className=\"col-12 col-sm-6 \">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.persistToGateway ? (\n                                <Checkbox type={\"checkbox\"} id={\"persistToGatewayInput\"}\n                                          nameLabel={\"Persist To Gateway\"} nameAttribute={\"persistToGateway\"}\n                                          data={attribute.persistToGateway} defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"persistToGatewayInput\"}\n                                          nameLabel={\"Persist To Gateway\"} nameAttribute={\"persistToGateway\"}\n                                          defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"persistToGatewayInput\"}\n                                      nameLabel={\"Persist To Gateway\"} nameAttribute={\"persistToGateway\"}\n                                      defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6 \">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.cascade ? (\n                                <Checkbox type={\"checkbox\"} id={\"cascadeInput\"} nameLabel={\"Cascade\"}\n                                          nameAttribute={\"cascade\"} data={attribute.cascade}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"cascadeInput\"} nameLabel={\"Cascade\"}\n                                          nameAttribute={\"cascade\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"cascadeInput\"} nameLabel={\"Cascade\"}\n                                      nameAttribute={\"cascade\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6 \">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.required ? (\n                                <Checkbox type={\"checkbox\"} id={\"requiredInput\"} nameLabel={\"Required\"}\n                                          nameAttribute={\"required\"} data={attribute.required}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"requiredInput\"} nameLabel={\"Required\"}\n                                          nameAttribute={\"required\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"requiredInput\"} nameLabel={\"Required\"}\n                                      nameAttribute={\"required\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6 \">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.searchable ? (\n                                <Checkbox type={\"checkbox\"} id={\"searchableInput\"} nameLabel={\"Searchable\"}\n                                          nameAttribute={\"searchable\"} data={attribute.searchable}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"searchableInput\"} nameLabel={\"Searchable\"}\n                                          nameAttribute={\"searchable\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"searchableInput\"} nameLabel={\"Searchable\"}\n                                      nameAttribute={\"searchable\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.mustBeUnique ? (\n                                <Checkbox type={\"checkbox\"} id={\"mustBeUniqueInput\"} nameLabel={\"Must Be Unique\"}\n                                          nameAttribute={\"mustBeUnique\"} data={attribute.mustBeUnique}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"mustBeUniqueInput\"} nameLabel={\"Must Be Unique\"}\n                                          nameAttribute={\"mustBeUnique\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"mustBeUniqueInput\"} nameLabel={\"Must Be Unique\"}\n                                      nameAttribute={\"mustBeUnique\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.uniqueItems ? (\n                                <Checkbox type={\"checkbox\"} id={\"uniqueItemsInput\"} nameLabel={\"Unique Items\"}\n                                          nameAttribute={\"uniqueItems\"} data={attribute.uniqueItems}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"uniqueItemsInput\"} nameLabel={\"Unique Items\"}\n                                          nameAttribute={\"uniqueItems\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"uniqueItemsInput\"} nameLabel={\"Unique Items\"}\n                                      nameAttribute={\"uniqueItems\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.multiple ? (\n                                <Checkbox type={\"checkbox\"} id={\"multipleInput\"} nameLabel={\"Multiple\"}\n                                          nameAttribute={\"multiple\"} data={attribute.multiple}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"multipleInput\"} nameLabel={\"Multiple\"}\n                                          nameAttribute={\"multiple\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"multipleInput\"} nameLabel={\"Multiple\"}\n                                      nameAttribute={\"multiple\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.nullable ? (\n                                <Checkbox type={\"checkbox\"} id={\"nullableInput\"} nameLabel={\"Nullable\"}\n                                          nameAttribute={\"nullable\"} data={attribute.nullable}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"nullableInput\"} nameLabel={\"Nullable\"}\n                                          nameAttribute={\"nullable\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"nullableInput\"} nameLabel={\"Nullable\"}\n                                      nameAttribute={\"nullable\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.readOnly ? (\n                                <Checkbox type={\"checkbox\"} id={\"readOnlyInput\"} nameLabel={\"Read Only\"}\n                                          nameAttribute={\"readOnly\"} data={attribute.readOnly}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"readOnlyInput\"} nameLabel={\"Read Only\"}\n                                          nameAttribute={\"readOnly\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"readOnlyInput\"} nameLabel={\"Read Only\"}\n                                      nameAttribute={\"readOnly\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.writeOnly ? (\n                                <Checkbox type={\"checkbox\"} id={\"writeOnlyInput\"} nameLabel={\"Write Only\"}\n                                          nameAttribute={\"writeOnly\"} data={attribute.writeOnly}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"writeOnlyInput\"} nameLabel={\"Write Only\"}\n                                          nameAttribute={\"writeOnly\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"writeOnlyInput\"} nameLabel={\"Write Only\"}\n                                      nameAttribute={\"writeOnly\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"col-12 col-sm-6\">\n                        <div className=\"form-check\">\n                          {attribute !== null ? (\n                            <>\n                              {attribute.deprecated ? (\n                                <Checkbox type={\"checkbox\"} id={\"deprecatedInput\"} nameLabel={\"Deprecated\"}\n                                          nameAttribute={\"deprecated\"} data={attribute.deprecated}\n                                          defaultValue={\"true\"}/>\n                              ) : (\n                                <Checkbox type={\"checkbox\"} id={\"deprecatedInput\"} nameLabel={\"Deprecated\"}\n                                          nameAttribute={\"deprecated\"} defaultValue={\"true\"}/>\n                              )}\n                            </>\n                          ) : (\n                            <Checkbox type={\"checkbox\"} id={\"deprecatedInput\"} nameLabel={\"Deprecated\"}\n                                      nameAttribute={\"deprecated\"} defaultValue={\"true\"}/>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/*<Accordion id=\"validationsAccordion\" title=\"Validations\">*/}\n                    {/*  {attribute !== null ? (*/}\n                    {/*    <MultiDimensionalArrayInput*/}\n                    {/*      target={\"validations\"}*/}\n                    {/*      data={attribute.validations}*/}\n                    {/*    />*/}\n                    {/*  ) : (*/}\n                    {/*    <MultiDimensionalArrayInput target={\"Validations\"} />*/}\n                    {/*  )}*/}\n                    {/*</Accordion>*/}\n\n                    <Accordion id=\"attributeAccordion\"\n                               items={[{\n                                 title: \"Object Config\",\n                                 id: \"objectConfigAccordion\",\n                                 render: function () {\n                                   return (<>\n                                     { attribute !== null && attribute.objectConfig !== null ? (\n                                       <MultiDimensionalArrayInput\n                                         id={\"objectConfig\"}\n                                         label={\"Object Config\"}\n                                         data={[{key: 'objectConfig', value: attribute.objectConfig}]}\n                                         deleteFunction={deleteElementFunction}\n                                         addFunction={addElement}\n                                       />\n                                     ) : (\n                                       <MultiDimensionalArrayInput\n                                         id={\"objectConfig\"}\n                                         label={\"Object Config\"}\n                                         data={null}\n                                         deleteFunction={deleteElementFunction}\n                                         addFunction={addElement}\n                                       />\n                                     )}\n                                   </>)\n                                 }\n                               },\n                                 {\n                                   title: \"Enum\",\n                                   id: \"enumAccordion\",\n                                   render: function () {\n                                     return (<>\n                                       {attribute !== null && attribute.enum !== null ? (\n                                         <MultiDimensionalArrayInput\n                                           id={\"enum\"}\n                                           label={\"Enum\"}\n                                           data={[{key: 'enum', value: attribute.enum}]}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       ) : (\n                                         <MultiDimensionalArrayInput\n                                           id={\"enum\"}\n                                           label={\"Enum\"}\n                                           data={null}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       )}\n                                     </>)\n                                   }\n                                 },\n                                 {\n                                   title: \"Required If\",\n                                   id: \"requiredIfAccordion\",\n                                   render: function () {\n                                     return (<>\n                                       {attribute !== null && attribute.requiredIf !== null ? (\n                                         <MultiDimensionalArrayInput\n                                           id={\"requiredIf\"}\n                                           label={\"Required If\"}\n                                           data={[{key: 'requiredIf', value: attribute.requiredIf}]}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       ) : (\n                                         <MultiDimensionalArrayInput\n                                           id={\"requiredIf\"}\n                                           label={\"Required If\"}\n                                           data={null}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       )}\n                                     </>)\n                                   }\n                                 },\n                                 {\n                                   title: \"Forbidden If\",\n                                   id: \"forbiddenIfAccordion\",\n                                   render: function () {\n                                     return (<>\n                                       {attribute !== null && attribute.forbiddenIf !== null ? (\n                                         <MultiDimensionalArrayInput\n                                           id={\"forbiddenIf\"}\n                                           label={\"Forbidden If\"}\n                                           data={[{key: 'forbiddenIf', value: attribute.forbiddenIf}]}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       ) : (\n                                         <MultiDimensionalArrayInput\n                                           id={\"forbiddenIf\"}\n                                           label={\"Forbidden If\"}\n                                           data={null}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       )}\n                                     </>)\n                                   }\n                                 },\n                                 {\n                                   title: \"All Of\",\n                                   id: \"allOfAccordion\",\n                                   render: function () {\n                                     return (<>\n                                       {attribute !== null && attribute.allOf !== null ? (\n                                         <MultiDimensionalArrayInput\n                                           label={\"All Of\"}\n                                           id={\"allOf\"}\n                                           data={[{key: 'allOf', value: attribute.allOf}]}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       ) : (\n                                         <MultiDimensionalArrayInput\n                                           label={\"All Of\"}\n                                           id={\"allOf\"}\n                                           data={null}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       )}\n                                     </>)\n                                   }\n                                 },\n                                 {\n                                   title: \"Any Of\",\n                                   id: \"anyOfAccordion\",\n                                   render: function () {\n                                     return (<>\n                                       {attribute !== null && attribute.anyOf !== null ? (\n                                         <MultiDimensionalArrayInput\n                                           label={\"Any Of\"}\n                                           id={\"anyOf\"}\n                                           data={[{key: 'anyOf', value: attribute.anyOf}]}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       ) : (\n                                         <MultiDimensionalArrayInput\n                                           label={\"Any Of\"}\n                                           id={\"anyOf\"}\n                                           data={null}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       )}\n                                     </>)\n                                   }\n                                 },\n                                 {\n                                   title: \"One Of\",\n                                   id: \"oneOfAccordion\",\n                                   render: function () {\n                                     return (<>\n                                       {attribute !== null && attribute.oneOf !== null ? (\n                                         <MultiDimensionalArrayInput\n                                           label={\"One Of\"}\n                                           id={\"oneOf\"}\n                                           data={[{key: 'oneOf', value: attribute.oneOf}]}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       ) : (\n                                         <MultiDimensionalArrayInput\n                                           label={\"One Of\"}\n                                           id={\"oneOf\"}\n                                           data={null}\n                                           deleteFunction={deleteElementFunction}\n                                           addFunction={addElement}\n                                         />\n                                       )}\n                                     </>)\n                                   }\n                                 }\n                               ]}/>\n                  </>\n                )}\n              </div>\n            </div>\n          )}} />\n  );\n}\n","import * as React from \"react\";\nimport Layout from \"../../../components/common/layout\";\nimport AttributeForm from \"../../../components/attributes/attribuutForm\";\n\nconst IndexPage = ({ id, entity }) => {\n  return (\n    <Layout title={\"Properties\"} subtext={\"Create or edit your properties\"}>\n      <main>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <AttributeForm id={id} entity={entity} />\n          </div>\n        </div>\n      </main>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","export const createElement = (\n  tagName,\n  className = [],\n  attributes = {},\n  value = \"\",\n  innerText = \"\",\n  onclick = null\n) => {\n  // create element\n  let element = document.createElement(tagName);\n\n  // set element value\n  element.value = value;\n\n  // set element inner text\n  element.innerText = innerText;\n\n  // add attributes to element\n  for (const [key, value] of Object.entries(attributes)) {\n    element.setAttribute(key, value);\n  }\n\n  // add classes to attribute\n  for (let i = 0; i < className.length; i++) {\n    element.classList.add(className[i]);\n  }\n\n  if (onclick !== null) {\n    element.addEventListener(\"click\", onclick, false);\n  }\n\n  return element;\n};\n\nexport const addElement = (\n  container,\n  newKey,\n  newValue,\n  inputName,\n  onClickFunction = null,\n  label = true\n) => {\n  let key = document.getElementById(newKey);\n  let value = document.getElementById(newValue);\n  let form = document.getElementById(container);\n\n  if (key.value.length == 0 || value.value.length == 0) {\n    return;\n  }\n\n  //create row\n  let formGroupRow = createElement(\"div\", [\n    \"row\",\n    key.value.replaceAll(\" \", \"-\"),\n  ]);\n\n  //set classNames for elements\n\n  // create input value\n  let formGroupColValue = createElement(\"div\", [\"col-5\"]);\n  let formGroupValue = createElement(\"div\", [\"from-group\"]);\n  let inputLabel = null;\n  if (label) {\n    inputLabel = createElement(\n      \"label\",\n      [\"utrecht-form-label\"],\n      { for: value.value },\n      \"\",\n      key.value\n    );\n  }\n  let inputValue = createElement(\n    \"input\",\n    [\"utrecht-textbox\", \"utrecht-textbox--html-input\", \"mb-2\"],\n    {\n      type: \"text\",\n      id: value.value,\n      name: `${inputName}[${key.value.replaceAll(\" \", \"-\")}]`,\n    },\n    value.value\n  );\n\n  //create delete button\n  let formGroupButton = createElement(\"div\", [\n    \"col-2\",\n    \"d-flex\",\n    \"mt-auto\",\n    \"mb-3\",\n  ]);\n  let deleteButton = createElement(\n    \"button\",\n    [\"utrecht-button\", \"utrecht-button-sm\", \"btn-sm\", \"btn-danger\"],\n    { type: \"button\" },\n    key.value,\n    \"Delete\",\n    onClickFunction\n  );\n\n  // adds the inputs in the div form-group\n  if (inputLabel !== null) {\n    formGroupValue.appendChild(inputLabel);\n  }\n  formGroupValue.appendChild(inputValue);\n  // adds the elements in in the col\n  formGroupColValue.appendChild(formGroupValue);\n  formGroupButton.appendChild(deleteButton);\n  // adds the elements in the row\n  formGroupRow.appendChild(formGroupColValue);\n  formGroupRow.appendChild(formGroupButton);\n  // adds the row to the newInputs div\n  form.appendChild(formGroupRow);\n\n  key.value = \"\";\n  value.value = \"\";\n};\n\nexport const deleteElementFunction = (event) => {\n  let elements = document.getElementsByClassName(event.target.value);\n\n  for (let i = 0; i < elements.length; i++) {\n    elements[i].remove();\n  }\n};\n\nexport const closeModal = (id) => {\n  let element = document.createElement(\"button\");\n  let modal = document.getElementById(\"modalFooter\" + id);\n\n  element.setAttribute(\"data-bs-dismiss\", \"modal\");\n  element.style.display = \"none\";\n\n  modal.appendChild(element);\n\n  element.click();\n\n  modal.removeChild(element);\n};\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","Checkbox","jsx_runtime_1","_","props","jsx","Fragment","children","jsxs","className","type","id","name","nameAttribute","defaultChecked","data","defaultValue","required","htmlFor","upperFirst","nameLabel","AttributeForm","entity","context","useUrlContext","React","attribute","setAttribute","showSpinner","attributes","setAttributes","fetch","adminUrl","credentials","headers","sessionStorage","getItem","then","response","json","catch","error","console","Card","title","back","save","cardHeader","to","cardBody","GenericInputComponent","nameOverride","description","SelectInputComponent","options","format","multipleOf","maximum","minimum","exclusiveMaximum","exclusiveMinimum","minLength","maxLength","maxItems","minItems","maxDate","minDate","minProperties","maxProperties","example","fileType","maxFileSize","map","row","undefined","inversedBy","selected","persistToGateway","cascade","searchable","mustBeUnique","uniqueItems","multiple","nullable","readOnly","writeOnly","deprecated","Accordion","items","render","objectConfig","MultiDimensionalArrayInput","label","key","deleteFunction","deleteElementFunction","addFunction","addElement","enum","requiredIf","forbiddenIf","allOf","anyOf","oneOf","subtext","createElement","tagName","innerText","onclick","element","document","entries","classList","add","addEventListener","container","newKey","newValue","inputName","onClickFunction","getElementById","form","formGroupRow","replaceAll","formGroupColValue","formGroupValue","inputLabel","for","inputValue","formGroupButton","deleteButton","appendChild","event","elements","getElementsByClassName","target","remove"],"sourceRoot":""}